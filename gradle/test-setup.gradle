sourceSets {
    testSetup {
        groovy.srcDir file('src/testSetup/groovy')
        resources.srcDir file('src/testSetup/resources')
        compileClasspath += configurations.testRuntime
        runtimeClasspath += output + compileClasspath
    }
}

tasks.withType(Test) { task ->
    testLogging {
        showStandardStreams = true
        events 'started', 'passed', 'failed'
    }

    def bitbucketUrl = resolveProperty('bitbucketUrl')
    if (bitbucketUrl) {
        logger.quiet "Using Bitbucket url '$bitbucketUrl' for executing tests with task '$task.name'."
        systemProperty 'bitbucketUrl', bitbucketUrl
    } else {
    	logger.quiet "Bitbucket url was NOT defined. Using defaults..."
    }
    
    def bitbucketCredentials = resolveProperty('bitbucketCredentials')
    if (bitbucketCredentials) {
        logger.quiet "Using Bitbucket credential '$bitbucketCredentials' for executing tests with task '$task.name'."
        systemProperty 'bitbucketCredentials', bitbucketCredentials
    } else {
    	logger.quiet "Bitbucket credential was NOT defined. Using defaults..."
    }
}

String resolveProperty(String propKey) {
    String propValue = System.getenv()[propKey]

    if(propValue) { return propValue }
    hasProperty(propKey) ? getProperty(propKey) : null
}
